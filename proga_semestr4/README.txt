Отчёт.

Постановка задачи:
	Один клиент. Клиент и сервер на одной ЭВМ.

Способ взаимодействия клиента и сервера:
	Клиент получает от пользователя запрос на модельном SQL, и, не анализируя его, передаёт серверу при помощи сокетов.
	Сервер анализирует запрос и в случае его корректности выполняет запрос и передаёт клиенту ответ.
	Если же запрос некорректен, сервер передаёт клиенту ошибку (исключение).
	Клиент выдаёт пользователю либо ответ на его запрос, либо сообщение об ошибке.
	Обработка запроса происходит методом рекурсивного спуска за исключением WHERE clause
		(вызывается функция, соответствующая одной альтернативе. Если функция фиксирует ошибку,
		то выбрасывается исключение, и вызывается функция, соответствующая другой альтернативе.)
	Выход из клиента происходит по команде exit.

Описание архитектуры программы и основных классов:
	Основной класс - Parser с публичным методом parse().
	Метод анализирует текст команды (идёт по нему) и, в случае нахождения невалидной лексемы, выбрасывает исключение.
	Для каждой из команд (CREATE, DELETE, SELECT, INSERT, DROP, UPDATE) в классе присутствует соответствующий метод.
		CREATE - создание файла с именем таблицы, запись заголовка в таблицу (для определения структуры таблицы).
		DELETE - создание объекта класса Table, вызов метода where(), запись информации о таблице в объект класса Table, вызов метода remove().
		SELECT - запись информации о таблице в объект класса Table, вызов метода where(), вызов метода select().
		INSERT - добавление строки в существующую таблицу.
		DROP - удаление существующей таблицы.
		UPDATE - запись информации о таблице в объект класса Table, вызов метода where(), вызов метода update().